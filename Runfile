#!/bin/bash
set -euo pipefail

test.run() {
    local name=wl
    docker rm -f $name || true
    # docker rmi containerized-gui-wayland
    docker build -t containerized-gui-wayland .
    docker run --privileged -ti \
        -v /dev/dri/card1:/dev/dri/card0 \
        -v /dev/null:/dev/dri/card1 \
        -v /dev/dri/renderD128:/dev/dri/renderD128 \
        -v /home/simpzan/:/home/simpzan/ \
        -p 8081:8080 -p 5900:5900 -p 3389:3389 \
        -v /home/simpzan/.ssh/:/home/app/.ssh \
        --name $name \
        containerized-gui-wayland
}
mesa.build() {
    # git checkout 4ee0a7e796547887344ded7526be0472db4c8d4e # 22.3.7
    mkdir -p tmp/
    meson setup tmp/ 
    meson setup tmp/ -Dprefix=`pwd`/out -Dvulkan-drivers=amd -Dgallium-drivers=radeonsi,swrast
    meson compile -C tmp/
    meson install -C tmp/
}
radv.run() {
    echo
    export WAYLAND_DISPLAY=wayland-0
    export VK_ICD_FILENAMES="out/share/vulkan/icd.d/radeon_icd.x86_64.json"
    killall vkcube-wayland || true
    sleep 1
    vulkaninfo
    vkcube-wayland &
    cat /proc/`pidof vkcube-wayland`/maps | grep r-xp
}
vkt.run() {
    export WAYLAND_DISPLAY=wayland-0
    # export LD_LIBRARY_PATH=/usr/local/lib64/ # use wayland glfw
    cd /home/simpzan/VulkanTutorial/code/build/15_hello_triangle
    ./15_hello_triangle
}
LearnOpenGL.build() {
    git clone https://github.com/JoeyDeVries/LearnOpenGL.git --depth=1
    cd LearnOpenGL
    mkdir build && cd build
    cmake ..
    make
}
VulkanTutorial.build() {
    set -x
    git clone https://github.com/Overv/VulkanTutorial.git --depth=1
    cd VulkanTutorial/
    # git checkout 1dbd594
    cd code
    mkdir build && cd build
    cmake ..
    make
}
glfw.install() {
    git clone https://github.com/glfw/glfw.git -b 3.3.8
    cd glfw
    mkdir -p build
    cd build
    cmake .. -D GLFW_USE_WAYLAND=1 -D BUILD_SHARED_LIBS=ON
    make install
}

help() { echo "run, the minimalist's task runner - https://github.com/simpzan/run"; }
.tasks() { compgen -A function | grep -v "^\."; }
${@:-.tasks}
